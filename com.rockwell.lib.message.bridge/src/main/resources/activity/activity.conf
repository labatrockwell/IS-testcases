port=8756

space.activity.type=SCRIPT
space.activity.executable=webapp.py

space.activity.name=libConfigsSend
space.activity.ros.node.name=com/rockwell/lib/message/bridge

#output1 -> input1 and both are bridged
#output2 -> input2 and only output is bridged
#output3 -> input3 and only input is bridged
#routeA -> routeA and only output is bridged
#routeB -> routeB and only input is bridged
#routeC -> routeD and both are bridged
#routeD -> routeC and neither are bridged
space.activity.routes.inputs=fromAdmin:input1:input2:input3:routeA:routeB:routeC:routeD
space.activity.route.input.fromAdmin=/lib/message/bridge/data
space.activity.route.input.input1=/r1
space.activity.route.input.input2=/r2
space.activity.route.input.input3=/r3
space.activity.route.input.routeA=/rA
space.activity.route.input.routeB=/rB
space.activity.route.input.routeC=/rD
space.activity.route.input.routeD=/rC

space.activity.routes.outputs=displayBroadcast:output1:output2:output3:routeA:routeB:routeC:routeD
space.activity.route.output.displayBroadcast=latch=true;/lib/message/bridge/broadcast
space.activity.route.output.output1=/r1
space.activity.route.output.output2=/r2
space.activity.route.output.output3=/r3
space.activity.route.output.routeA=/rA
space.activity.route.output.routeB=/rB
space.activity.route.output.routeC=/rC
space.activity.route.output.routeD=/rD

space.activity.webapp.web.server.port=${port}
space.activity.webapp.content.location=webapp
space.activity.webapp.url.initial=index.html
space.activity.webapp.url.query_string=
space.activity.webapp.browser.debug=true

space.activity.log.level=info


### testing
# needs to get lib from static server so it can connect
# to I.S. backend
staticserver.host=localhost
staticserver.port=31337

# this tells the lib to bridge messages between ROS and the front-end
message.bridge.inputs=input1:input3:routeB:routeD
message.bridge.outputs=output1:output2:routeA:routeC
space.activity.routes.autosend=true